import _ from 'lodash'
import Qrcode from 'qrious'
const JsPDF = require('jspdf')
require('jspdf-autotable')

export default {}

export function generatePDF (state) {
  let doc = new JsPDF('p', 'pt')
  doc.setFontSize(10)
  doc.setTextColor(0)
  doc.setFontStyle('bold')
  doc.text('Plan Name: ' + state.name, 40, 50)
  doc.setFontStyle('normal')
  doc.setFontSize(8)
  doc.text('Date: ' + new Date().toLocaleString('en-US'), 450, 50)

  let currentSemester = 0
  let location = 60
  let previous

  _.forOwn(state.courses, (value, key) => {
    doc.autoTable(getColumns(), value, {
      theme: 'grid',
      startY: location,
      drawRow: function (row, data) {
        // Colspan
        doc.setFontStyle('bold')
        doc.setFontSize(10)
        doc.setTextColor(200, 0, 0)
        if (parseInt(key) !== currentSemester) {
          doc.rect(data.settings.margin.left, row.y, data.table.width, 20, 'S')
          doc.autoTableText('Semester ' + key + ' | Credits: ' + getCredits(value), data.settings.margin.left + data.table.width / 2, row.y + row.height / 2, {
            halign: 'center',
            valign: 'middle'
          })
          currentSemester = parseInt(key)
          data.cursor.y += 20
        }
        if (row.index % 5 === 0) {
          var posY = row.y + row.height * 6 + data.settings.margin.bottom
          var pageHeight = doc.internal.pageSize.height || doc.internal.pageSize.getHeight()
          if (posY > pageHeight) {
            data.addPage()
          }
        }
      }
    })
    previous = doc.autoTable.previous
    location = previous.finalY + 10
  })

  return doc
}

export function addShortURL (doc, URL) {
  doc.setFontSize(10)
  doc.setFontStyle('bold')
  doc.text('View this plan online with link: ' + URL, 50, doc.autoTable.previous.finalY + 30)
  let qr = new Qrcode({
    value: URL
  })
  doc.addImage(qr.toDataURL(), 'PNG', 450, doc.autoTable.previous.finalY + 30, 70, 70)
  doc.autoTable.previous.finalY += 80
  return doc
}

export function addCopyright (doc) {
  doc.setFontSize(10)
  doc.setFontStyle('bold')
  doc.text('This document is generated by Organizer. https://plan.v2grad.org', 50, doc.autoTable.previous.finalY + 30)
  doc.autoPrint()
  return doc
}

export function getColumns () {
  return [
    { title: 'Course Name', dataKey: 'CourseName' },
    { title: 'Course Title', dataKey: 'CourseTitle' },
    { title: 'Credit Hours', dataKey: 'CreditHours' }
  ]
}

function getCredits (courses) {
  let sum = 0
  courses.forEach(element => {
    sum += parseInt(element.CreditHours)
  })
  return sum
}
